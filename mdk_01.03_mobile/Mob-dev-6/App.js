import * as React from 'react'
import { ScrollView, StyleSheet, Text, View } from 'react-native'
export default function App() {
	return (
		<ScrollView>
			<View style={styles.container}>
				<Text style={{ fontSize: 18, fontWeight: 500 }}>
					О мобильном приложении
				</Text>
				<Text>
					В наши дни только ленивый не задается вопросом о разработке своего
					мобильного приложения. На рынке существуют тысячи стартапов,
					пытающихся продвинуть свои идеи, а все больше владельцев бизнеса
					стараются автоматизировать наиболее монотонные процессы внутри
					компаний, продвигать свою продукцию или же установить более тесный
					контакт с аудиторией онлайн
				</Text>
				<Text style={{ fontSize: 18, fontWeight: 500 }}>
					Нативное приложение
				</Text>
				<Text>
					В таких приложениях используется быстрый и надежный язык
					программирования, но каждый язык привязан к определенной платформе.
					Разработчики могут использовать программирование Objective-C, PyObjC,
					Swift, Python. Если Вы хотите установить нативное приложение на свой
					iPhone, iPad и Android, то код должен регулироваться / адаптироваться,
					чтобы соответствовать стандартам каждой платформы.
				</Text>
				<Text>
					Функциональность нативных приложений лучше, чем функциональность
					любого другого приложения, потому что они подстроены под все функции
					смартфона, включая камеру, датчик поворачивания экрана и адресную
					книгу, что доставляет большое удовольствие пользователям. Для такого
					типа продвижение мобильных приложений может быть проще. Так как этот
					тип приложения можно купить и скачать в магазине приложений
					разработчика или производителя смартфонов. Таким образом Вы
					значительно, также одновременно усиливаете популярность приложения и
					видимость его на рынке. Такое создание приложений выгодно!
				</Text>
				<Text style={{ fontSize: 18, fontWeight: 500 }}>
					Гибридное приложение
				</Text>
				<Text>
					Это компромисс между нативным и веб приложением, представляющий собой
					нативное приложение с HTML кодом, которое позволяет Вам наслаждаться
					всеми преимуществами нативного приложения, которое при этом идет в
					ногу с последними веб технологиями. Facebook - это пример гибридного
					приложения, которое сочетает в себе многие функции нативного
					приложения, но также требует своевременного обновления функций
				</Text>
				<Text style={{ fontSize: 18, fontWeight: 500 }}>Веб приложение</Text>
				<Text>
					Это сайт для мобильных устройств (смартфонов или планшетов), созданный
					для работы со всеми платформами. Очевидное преимущество веб приложения
					- это совместимость с разными платформами и отсутствие процесса
					дистрибуции / распространения через магазин приложений.
					Кроссплатформенные приложения использующие JavaScript, язык разметки и
					стили (HTML, CSS) это удобно для пользователя. Такой тип приложения
					привлекает много людей ввиду доступности для поиска. Недостаток веб
					приложений заключается в том, что они не позволяют использовать все
					функции мобильного телефона или планшетного компьютера, например,
					камеру. Веб-приложения идеально подходят для сайтов, которые
					отображают только содержимое и не требуют доступа к внутренним
					функциям телефона, смартфона, планшетника.
				</Text>
			</View>
		</ScrollView>
	)
}

const styles = StyleSheet.create({
	container: {
		padding: 30,
		flex: 1,
		backgroundColor: '#fff',
		alignItems: 'center',
		justifyContent: 'center',
	},
	text: {
		fontSize: 14,
		lineHeight: 21,
		fontWeight: 'bold',
		letterSpacing: 0.25,
		color: 'white',
	},
	containerHorizontal: {
		flexDirection: 'row',
		height: 'auto',
	},
	HorizText: {
		flex: 1,
		flexDirection: 'column',
		marginBottom: 10,
	},
})
